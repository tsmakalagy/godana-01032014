<?php

namespace DoctrineORMModule\Proxy\__CG__\Godana\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Shop extends \Godana\Entity\Shop implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', 'name', 'description', 'ident', 'owner', 'cities', 'contacts', 'categories', 'products', 'deleted');
        }

        return array('__isInitialized__', 'id', 'name', 'description', 'ident', 'owner', 'cities', 'contacts', 'categories', 'products', 'deleted');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Shop $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', array($id));

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', array());

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', array($name));

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', array());

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', array($description));

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdent', array());

        return parent::getIdent();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdent($ident)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdent', array($ident));

        return parent::setIdent($ident);
    }

    /**
     * {@inheritDoc}
     */
    public function getOwner()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOwner', array());

        return parent::getOwner();
    }

    /**
     * {@inheritDoc}
     */
    public function setOwner($owner)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOwner', array($owner));

        return parent::setOwner($owner);
    }

    /**
     * {@inheritDoc}
     */
    public function getCities()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCities', array());

        return parent::getCities();
    }

    /**
     * {@inheritDoc}
     */
    public function addCity($city)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCity', array($city));

        return parent::addCity($city);
    }

    /**
     * {@inheritDoc}
     */
    public function addCities(\Doctrine\Common\Collections\ArrayCollection $cities)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCities', array($cities));

        return parent::addCities($cities);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCities(\Doctrine\Common\Collections\ArrayCollection $cities)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCities', array($cities));

        return parent::removeCities($cities);
    }

    /**
     * {@inheritDoc}
     */
    public function getContacts()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContacts', array());

        return parent::getContacts();
    }

    /**
     * {@inheritDoc}
     */
    public function addContact($contact)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addContact', array($contact));

        return parent::addContact($contact);
    }

    /**
     * {@inheritDoc}
     */
    public function addContacts(\Doctrine\Common\Collections\ArrayCollection $contacts)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addContacts', array($contacts));

        return parent::addContacts($contacts);
    }

    /**
     * {@inheritDoc}
     */
    public function removeContacts(\Doctrine\Common\Collections\ArrayCollection $contacts)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeContacts', array($contacts));

        return parent::removeContacts($contacts);
    }

    /**
     * {@inheritDoc}
     */
    public function getCategories()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCategories', array());

        return parent::getCategories();
    }

    /**
     * {@inheritDoc}
     */
    public function addCategory($category)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCategory', array($category));

        return parent::addCategory($category);
    }

    /**
     * {@inheritDoc}
     */
    public function addCategories(\Doctrine\Common\Collections\ArrayCollection $categories)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCategories', array($categories));

        return parent::addCategories($categories);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCategories(\Doctrine\Common\Collections\ArrayCollection $categories)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCategories', array($categories));

        return parent::removeCategories($categories);
    }

    /**
     * {@inheritDoc}
     */
    public function getProducts()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProducts', array());

        return parent::getProducts();
    }

    /**
     * {@inheritDoc}
     */
    public function addProduct($product)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addProduct', array($product));

        return parent::addProduct($product);
    }

    /**
     * {@inheritDoc}
     */
    public function addProducts(\Doctrine\Common\Collections\ArrayCollection $products)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addProducts', array($products));

        return parent::addProducts($products);
    }

    /**
     * {@inheritDoc}
     */
    public function removeProducts(\Doctrine\Common\Collections\ArrayCollection $products)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeProducts', array($products));

        return parent::removeProducts($products);
    }

    /**
     * {@inheritDoc}
     */
    public function getDeleted()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDeleted', array());

        return parent::getDeleted();
    }

    /**
     * {@inheritDoc}
     */
    public function setDeleted($deleted)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDeleted', array($deleted));

        return parent::setDeleted($deleted);
    }

}
