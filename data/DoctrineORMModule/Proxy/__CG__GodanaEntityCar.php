<?php

namespace DoctrineORMModule\Proxy\__CG__\Godana\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Car extends \Godana\Entity\Car implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', 'license', 'model', 'driver', 'cooperative', 'files', 'lineCars');
        }

        return array('__isInitialized__', 'id', 'license', 'model', 'driver', 'cooperative', 'files', 'lineCars');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Car $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', array($id));

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getLicense()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLicense', array());

        return parent::getLicense();
    }

    /**
     * {@inheritDoc}
     */
    public function setLicense($license)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLicense', array($license));

        return parent::setLicense($license);
    }

    /**
     * {@inheritDoc}
     */
    public function getModel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getModel', array());

        return parent::getModel();
    }

    /**
     * {@inheritDoc}
     */
    public function setModel($model)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setModel', array($model));

        return parent::setModel($model);
    }

    /**
     * {@inheritDoc}
     */
    public function getDriver()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDriver', array());

        return parent::getDriver();
    }

    /**
     * {@inheritDoc}
     */
    public function setDriver($driver)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDriver', array($driver));

        return parent::setDriver($driver);
    }

    /**
     * {@inheritDoc}
     */
    public function getCooperative()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCooperative', array());

        return parent::getCooperative();
    }

    /**
     * {@inheritDoc}
     */
    public function setCooperative($cooperative)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCooperative', array($cooperative));

        return parent::setCooperative($cooperative);
    }

    /**
     * {@inheritDoc}
     */
    public function getFiles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFiles', array());

        return parent::getFiles();
    }

    /**
     * {@inheritDoc}
     */
    public function addFile($file)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addFile', array($file));

        return parent::addFile($file);
    }

    /**
     * {@inheritDoc}
     */
    public function addFiles(\Doctrine\Common\Collections\ArrayCollection $files)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addFiles', array($files));

        return parent::addFiles($files);
    }

    /**
     * {@inheritDoc}
     */
    public function removeFiles(\Doctrine\Common\Collections\ArrayCollection $files)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeFiles', array($files));

        return parent::removeFiles($files);
    }

    /**
     * {@inheritDoc}
     */
    public function addLineCars(\Doctrine\Common\Collections\ArrayCollection $lineCars)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addLineCars', array($lineCars));

        return parent::addLineCars($lineCars);
    }

    /**
     * {@inheritDoc}
     */
    public function removeLineCars(\Doctrine\Common\Collections\ArrayCollection $lineCars)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeLineCars', array($lineCars));

        return parent::removeLineCars($lineCars);
    }

    /**
     * {@inheritDoc}
     */
    public function getLineCars()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLineCars', array());

        return parent::getLineCars();
    }

    /**
     * {@inheritDoc}
     */
    public function addLineCar($lineCar)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addLineCar', array($lineCar));

        return parent::addLineCar($lineCar);
    }

    /**
     * {@inheritDoc}
     */
    public function getLineCarSeats(\Godana\Entity\Line $line)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLineCarSeats', array($line));

        return parent::getLineCarSeats($line);
    }

    /**
     * {@inheritDoc}
     */
    public function getLineCarColumns(\Godana\Entity\Line $line)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLineCarColumns', array($line));

        return parent::getLineCarColumns($line);
    }

    /**
     * {@inheritDoc}
     */
    public function getLineCarFare(\Godana\Entity\Line $line)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLineCarFare', array($line));

        return parent::getLineCarFare($line);
    }

}
